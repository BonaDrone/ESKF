function [x,P] = update(x,P,y,dt)
%UPDATE Summary of this function goes here
%   Detailed explanation goes here

    persistent Q;
    persistent Fi;

    % Integration model: Update state
    x(1) = x(1) + dt*x(4);
    x(2) = x(2) + dt*x(5);
    x(3) = x(3) + dt*x(6);
    x(4) = x(4) - dt*(( - y(1))*(x(7)^2 + x(8)^2 - x(9)^2 - x(10)^2) - ( - y(2))*(2*x(7)*x(10) - 2*x(8)*x(9)) + ( - y(3))*(2*x(7)*x(9) + 2*x(8)*x(10)));
    x(5) = x(5) - dt*(( - y(2))*(x(7)^2 - x(8)^2 + x(9)^2 - x(10)^2) + ( - y(1))*(2*x(7)*x(10) + 2*x(8)*x(9)) - ( - y(3))*(2*x(7)*x(8) - 2*x(9)*x(10)));
    x(6) = x(6) - dt*(g + ( - y(3))*(x(7)^2 - x(8)^2 - x(9)^2 + x(10)^2) - ( - y(1))*(2*x(7)*x(9) - 2*x(8)*x(10)) + ( - y(2))*(2*x(7)*x(8) + 2*x(9)*x(10)));
    x(7) = x(7) + (dt*x(8)*( - y(4)))/2 + (dt*x(9)*( - y(5)))/2 + (dt*x(10)*( - y(6)))/2;
    x(8) = x(8) - (dt*x(7)*( - y(4)))/2 - (dt*x(9)*( - y(6)))/2 + (dt*x(10)*( - y(5)))/2;
    x(9) = x(9) - (dt*x(7)*( - y(5)))/2 + (dt*x(8)*( - y(6)))/2 - (dt*x(10)*( - y(4)))/2;
    x(10) = x(10) - (dt*x(7)*( - y(6)))/2 - (dt*x(8)*( - y(5)))/2 + (dt*x(9)*( - y(4)))/2;
     
    % Error-State Jacobian
    Fn = [ 1, 0, 0, dt,  0,  0,                                                               0,                                                               0,                                                              0;...
             0, 1, 0,  0, dt,  0,                                                               0,                                                               0,                                                               0;...
             0, 0, 1,  0,  0, dt,                                                               0,                                                               0,                                                               0;...
             0, 0, 0,  1,  0,  0,          dt*(y(2)*(2*x(7)*x(9) + 2*x(8)*x(10)) + y(3)*(2*x(7)*x(10) - 2*x(8)*x(9))),  dt*(y(3)*(x(7)^2 + x(8)^2 - x(9)^2 - x(10)^2) - y(1)*(2*x(7)*x(9) + 2*x(8)*x(10))), -dt*(y(2)*(x(7)^2 + x(8)^2 - x(9)^2 - x(10)^2) + y(1)*(2*x(7)*x(10) - 2*x(8)*x(9)));...
             0, 0, 0,  0,  1,  0, -dt*(y(3)*(x(7)^2 - x(8)^2 + x(9)^2 - x(10)^2) + y(2)*(2*x(7)*x(8) - 2*x(9)*x(10))),          dt*(y(1)*(2*x(7)*x(8) - 2*x(9)*x(10)) + y(3)*(2*x(7)*x(10) + 2*x(8)*x(9))),  dt*(y(1)*(x(7)^2 - x(8)^2 + x(9)^2 - x(10)^2) - y(2)*(2*x(7)*x(10) + 2*x(8)*x(9)));...
             0, 0, 0,  0,  0,  1,  dt*(y(2)*(x(7)^2 - x(8)^2 - x(9)^2 + x(10)^2) - y(3)*(2*x(7)*x(8) + 2*x(9)*x(10))), -dt*(y(1)*(x(7)^2 - x(8)^2 - x(9)^2 + x(10)^2) + y(3)*(2*x(7)*x(9) - 2*x(8)*x(10))),          dt*(y(1)*(2*x(7)*x(8) + 2*x(9)*x(10)) + y(2)*(2*x(7)*x(9) - 2*x(8)*x(10)));...
             0, 0, 0,  0,  0,  0,                                                               1,                                                          dt*y(6),                                                         -dt*y(5);...
             0, 0, 0,  0,  0,  0,                                                         -dt*y(6),                                                               1,                                                          dt*y(4);...
             0, 0, 0,  0,  0,  0,                                                          dt*y(5),                                                         -dt*y(4),                                                               1];
 
    % Predict covariance
    P = Fn*P*Fn.' + Fi*Q*Fi.';
    
end
